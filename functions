installFlatpakUbuntu() {

	printf "Installation de Flatpak pour Ubuntu >= 18.10 (requis pour ce script)..."

	apt -y install flatpak >> stdout.log
	apt -y install gnome-software-plugin-flatpak >> stdout.log

	printf "OK\n"
}

flatpakSetup() {

	printf "Ajout du repository FlatHub..."

	flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo >> stdout.log

	printf "OK\n"
}


installSteam() {

	printf "Installation de Steam..."

	apt install -y steam-installer >> stdout.log

	printf "OK\n"
}

installLutris() {

	printf "Installation de Lutris..."

	add-apt-repository -y ppa:lutris-team/lutris >> stdout.log
	apt-get update >> stdout.log
	apt-get -y install lutris >> stdout.log

	printf "OK\n"
}

installWineForLutris() {

	# Installer Wine (faire tourner des programmes Windows).

	dpkg --add-architecture i386 >> stdout.log
	wget -nc https://dl.winehq.org/wine-builds/winehq.key >> stdout.log
	apt-key add winehq.key >> stdout.log
	rm winehq.key >> stdout.log

	#--------------------- ONLY FOR UBUNTU 19.04 ---------------
	# If your have others version or distribution, go to https://github.com/lutris/lutris/wiki/Wine-Dependencies
	apt-add-repository -y 'deb https://dl.winehq.org/wine-builds/ubuntu/ disco main' >> stdout.log
	apt update >> stdout.log
	apt-get install -y --install-recommends winehq-stable wine-stable wine-stable-i386 wine-stable-amd64 >> stdout.log
	apt-get install -y libgnutls30:i386 libldap-2.4-2:i386 libgpg-error0:i386 libxml2:i386 libasound2-plugins:i386 libsdl2-2.0-0:i386 libfreetype6:i386 libdbus-1-3:i386 libsqlite3-0:i386 >> stdout.log
}

changeSwapSettings() {

	#change le déclenchement du fichier swap à 5% de la ram libre
	printf "Réglage du déclenchement du fichier d'échange (swap)..."

	echo vm.swappiness=5 | tee /etc/sysctl.d/99-swappiness.conf >> stdout.log
	echo vm.vfs_cache_pressure=50 | tee -a /etc/sysctl.d/99-swappiness.conf >> stdout.log

	sysctl -p /etc/sysctl.d/99-swappiness.conf >> stdout.log

	swapoff -av >> stdout.log
	swapon -av	>> stdout.log

	printf "OK\n"
}

changeGnomeSettings() {

	printf "Changement des paramètres de gnome shell..."
	#Notifications
	gsettings set org.gnome.desktop.notifications show-in-lock-screen false >> stdout.log
	gsettings set org.gnome.desktop.notifications show-banners false >> stdout.log
	#Recherche
	gsettings set org.gnome.desktop.search-providers disable-external true >> stdout.log

	printf "OK\n"

}

installVirtualBox() {

	printf "Installation de VirtualBox..."

	apt install -y virtualbox virtualbox-dkms virtualbox-ext-pack virtualbox-guest-additions-iso virtualbox-qt >> stdout.log

	printf "OK\n"
}

removeSnap() {

	printf "Désinstallation de snap..."

	apt -y purge snapd >> stdout.log
}

installAppsDev() {

	printf "Installation du pack développeur (Eclipse, IntelliJIDEA, Git)..."

	apt install -y git >> stdout.log
	flatpak install -y flathub com.jetbrains.IntelliJ-IDEA-Community com.visualstudio.code >> stdout.log

	printf "OK\n"
}

installStandardApps() {

	printf "Installation des applications standard..."

	apt -y install gnome-tweaks gparted baobab synaptic vlc libreoffice qbittorrent vim dconf-editor Klavaro >> stdout.log
	flatpak install -y flathub com.sublimetext.three com.discordapp.Discord >> stdout.log

	printf "OK\n"

}

installMinecraft() {

	printf "Installation de Minecraft..."

	flatpak install -y flathub com.mojang.Minecraft >> stdout.log

	printf "OK\n"
}

installOpenJre() {

	printf "Installation de la version libre de Java..."

	apt -y install default-jre >> stdout.log

	printf "OK\n"
}

installEclipse() {

	#Installation de eclipse avec snap => installation de snap.

	printf "Installation de Eclipse..."

	sudo apt -y install snapd >> stdout.log
	sudo snap install eclipse --classic >> stdout.log

	printf "OK\n"
}

installLAMP() {

	printf "Installation de LAMP..."

	apt install -y apache2 php libapache2-mod-php mysql-server php-mysql phpmyadmin php-curl php-gd php-intl php-json php-mbstring php-xml php-zip >> stdout.log

	printf "OK\n"
}

updateAndClean() {

	printf "Mises à jour des programmes et suppressions des packages inutiles..."

	apt upgrade -y >> stdout.log
	apt autoremove -y --purge >> stdout.log
	apt clean >> stdout.log

	printf "OK\n"
}
